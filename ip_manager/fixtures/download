{"swagger": "2.0", "info": {"title": "SYOKINET API", "description": "This is an API for SYOKINET. It is a backend challange given by SYOKINET.\n\n For you to use this API you need to first login. You can do that using the user login route(user/login). If not yet a user please register using the user register route(user/register).\n\n After successful login you will get both `access` and `refresh` token. You will need the `access` token for **Authorization**\n\nIf using curl or any other tool make sure to pass `Authorization` as a header with a value of the Bearers token e.g \n\n ```curl -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjk2MzY5MTc2LCJpYXQiOjE2OTYzNjE5NzYsImp\" http://127.0.0.1:8000/ip/allocated\\?start_ip\\=\"59.0.153.18\"\\&\\&end_ip\\=\"60.50.10.0\"```", "termsOfService": "https://www.yourapp.com/terms/", "contact": {"email": "levinmutai@gmail.com"}, "license": {"name": "MIT"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"api_key": {"type": "apiKey", "in": "header", "name": "Authorization"}}, "security": [{"api_key": []}], "paths": {"/ip/": {"get": {"operationId": "ip_list", "description": "Lists all IPs in the system", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/IPTableSerializerGet"}}}}}}, "tags": ["ip"]}, "parameters": []}, "/ip/allocate": {"post": {"operationId": "ip_allocate_create", "description": "Used to allocate IP to a Customer. Takes a customername and an email. Returns IP details allocated to the user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AllocatedIPSerializerCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AllocatedIPSerializerCreate"}}}, "tags": ["ip"]}, "parameters": []}, "/ip/allocated": {"get": {"operationId": "ip_allocated_list", "description": "Used to list all allocated IPs in the system. This route also does range fltering of allocated IPs. one has to pass `start_ap` and end `end_aip` as their parameters\n\n###Example\n`http://000000000:8000/api/v1/allocated_ips?start_ip=00000000000&end_ip=00000000000`", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/AllocatedIPSerializerCreate"}}}}, "tags": ["ip"]}, "parameters": []}, "/ip/avilable/": {"get": {"operationId": "ip_list_available", "description": "Lists all IPs with status of  \"available\". Takes no parameter or request body", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/IPTableSerializerGet"}}}}}}, "tags": ["ip"]}, "parameters": []}, "/ip/create": {"post": {"operationId": "ip_create_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IPTableSerializerCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/IPTableSerializerCreate"}}}, "tags": ["ip"]}, "parameters": []}, "/ip/delete/{ip_address}": {"delete": {"operationId": "ip_delete_delete", "description": "Used to delete an IP from the system. Only users with Admin Previlages can delete", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["ip"]}, "parameters": [{"name": "ip_address", "in": "path", "required": true, "type": "string"}]}, "/ip/release/{ip_address}": {"put": {"operationId": "ip_release", "description": "Used to release Id allocated to a given customer. Takes the IP as a path parameter and returns a string as a message", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IPTableSerializerUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/IPTableSerializerUpdate"}}}, "tags": ["ip"]}, "parameters": [{"name": "ip_address", "in": "path", "required": true, "type": "string"}]}, "/token/refresh/": {"post": {"operationId": "token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["token"]}, "parameters": []}, "/user/login": {"post": {"operationId": "user_login_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["user"]}, "parameters": []}, "/user/register": {"post": {"operationId": "user_register_create", "description": "Use this route to register a new user. Four fields must be provided: username, email, customer_name and password", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/UserRegistration"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/UserRegistration"}}}, "tags": ["user"]}, "parameters": []}}, "definitions": {"IPTableSerializerGet": {"required": ["ip"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "ip": {"title": "Ip", "type": "string", "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["allocated", "available", "reserved"]}}}, "AllocatedIPSerializerCreate": {"required": ["customer_name", "email"], "type": "object", "properties": {"customer_name": {"title": "Customer name", "type": "string", "maxLength": 50, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "IPTableSerializerCreate": {"required": ["ip"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "ip": {"title": "Ip", "type": "string", "minLength": 1}, "status": {"title": "Status", "type": "string", "enum": ["allocated", "available", "reserved"]}}}, "IPTableSerializerUpdate": {"type": "object", "properties": {}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "TokenObtainPair": {"required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "UserRegistration": {"required": ["username", "email", "customer_name", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "maxLength": 50, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 80, "minLength": 1}, "customer_name": {"title": "Customer name", "type": "string", "maxLength": 50, "minLength": 1}, "password": {"title": "Password", "type": "string", "maxLength": 128, "minLength": 1}}}}}